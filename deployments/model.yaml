apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: allowed-repo
  namespace: kubesphere-authz-system
spec:
  enabled: true
  modelText: |
    [request_definition]
    r = namespace,image
    
    [policy_definition]
    p = namespace,image,eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.namespace == p.namespace && hasPrefix(r.image, p.image)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: block-nodeport-service
  namespace: kubesphere-authz-system
spec:
  modelText: ""
  enabled: false
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: container-resource-limit
  namespace: kubesphere-authz-system
spec:
  enabled: false

  modelText: |
    [request_definition]
    r = namespace, cpu, memory
    
    [policy_definition]
    p = namespace, cpu, memory, eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.namespace == p.namespace && r.cpu < parseFloat(p.cpu) && r.memory < parseFloat(p.memory)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: container-resource-ratio
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = namespace, cpuRedundancyRatio, memoryRedundancyRatio
    
    [policy_definition]
    p = namespace, cpuRedundancyRatio, memoryRedundancyRatio, eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.namespace == p.namespace && r.cpuRedundancyRatio < parseFloat(p.cpuRedundancyRatio) && r.memoryRedundancyRatio < parseFloat(p.memoryRedundancyRatio)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: disallowed-tags
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = namespace,tag
    
    [policy_definition]
    p = namespace,tag,eft
    
    [policy_effect]
    e =!some(where (p.eft == deny))
    
    [matchers]
    m = r.namespace == p.namespace && r.tag==p.tag
status:
  enabled: false
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: external-ip
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = namespace,ip
    
    [policy_definition]
    p = namespace,ip,eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.namespace == p.namespace && r.ip==p.ip
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: block-nodeport-service
  namespace: kubesphere-authz-system
spec:
  modelText: ""
  enabled: false
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: image-digest
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: ""
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: permission
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = resourceName,resourceKind,operation
    
    [policy_definition]
    p = resourceName,resourceKind,operation,eft
    
    [policy_effect]
    e =!some(where (p.eft == deny))
    
    [matchers]
    m = r.resourceName == p.resourceName && r.resourceKind == p.resourceKind && r.operation == p.operation
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: replica-limits
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = namespace, replica
    
    [policy_definition]
    p = namespace, replicaMin, replicaMax, eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.namespace == p.namespace && r.replica >= parseFloat(p.replicaMin) &&r.replica <= parseFloat(p.replicaMax)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: required-annotations
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = k,v
    
    [policy_definition]
    p = k,v,eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.k == p.k && regexMatch(r.v,p.v)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: required-labels
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = k,v
    
    [policy_definition]
    p = k,v,eft
    
    [policy_effect]
    e =some(where (p.eft == allow))
    
    [matchers]
    m = r.k == p.k && regexMatch(r.v,p.v)
---
apiVersion: "auth.casbin.org/v1"
kind: CasbinModel
metadata:
  name: required-probes
  namespace: kubesphere-authz-system
spec:
  enabled: false
  modelText: |
    [request_definition]
    r = probe
    r2 = probe, probeType
    
    [policy_definition]
    
    p = probe
    p2 = probe,probeType
    
    [policy_effect]
    
    e =some(where (p.eft == allow))
    e2 =some(where (p.eft == allow))
    
    [matchers]
    m = r.probe == p.probe
    m2 = r2.probe == p2.probe && r2.probeType == p2.probeType

  


  

  